# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
jobs:
  build:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout sources
        uses: actions/checkout@v4
      - id: setup_jdk
        name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          server-id: central # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_PASSWORD # env variable for token in deploy
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
      - id: build_artifacts
        name: Build Artifacts
        run: |
          mvn \
            --no-transfer-progress \
            --batch-mode \
            --activate-profiles production \
            -DskipTests=true \
            package
      - id: extract_version
        name: Extract Version
        run: |
          echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - id: publish_artifacts
        name: Publish Artifacts
        if: ${{ github.ref_name == 'release' && !contains(env.VERSION,'SNAPSHOT') || github.ref_name == 'main' && contains(env.VERSION,'SNAPSHOT') }}
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        run: |
          mvn \
            --no-transfer-progress \
            --batch-mode \
            --activate-profiles production \
            -DskipTests=true \
            deploy
      - id: create_tag
        name: Create Tag
        if: ${{ github.ref_name == 'release' && !contains(env.VERSION,'SNAPSHOT') }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag $VERSION
          git push origin $VERSION
      - id: create-release
        name: Create Release
        if: ${{ github.ref_name == 'release' && !contains(env.VERSION,'SNAPSHOT') }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          files: |
            target/*.jar
            LICENSE          
